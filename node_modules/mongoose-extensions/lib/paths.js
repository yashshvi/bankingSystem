// Generated by CoffeeScript 1.10.0
var _,
  hasProp = {}.hasOwnProperty,
  slice = [].slice;

_ = require('underscore');

module.exports = function() {
  var _getPath, _setPath, paths;
  _setPath = function(obj, path, value) {
    var i, key, keys, lastKey, len;
    keys = path.split('.');
    lastKey = keys.pop();
    for (i = 0, len = keys.length; i < len; i++) {
      key = keys[i];
      if (obj[key] == null) {
        obj[key] = {};
      }
      obj = obj[key];
    }
    return obj[lastKey] = value;
  };
  _getPath = function(obj, path) {
    var i, key, len, ref;
    ref = path.split('.');
    for (i = 0, len = ref.length; i < len; i++) {
      key = ref[i];
      obj = obj != null ? obj[key] : void 0;
    }
    return obj;
  };
  paths = {
    paths: function(obj) {
      var key, keys, newKeys, value;
      keys = [];
      for (key in obj) {
        if (!hasProp.call(obj, key)) continue;
        value = obj[key];
        if (_.isObject(value) && !_.isArray(value) && !(value instanceof Date)) {
          newKeys = paths.paths(value).map(function(deepKey) {
            return [key, deepKey].join('.');
          });
          keys = keys.concat(newKeys.length && newKeys || [key]);
        } else {
          keys.push(key);
        }
      }
      return keys;
    },
    path: function() {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      if (args.length === 3) {
        return _setPath.apply(null, args);
      } else {
        return _getPath.apply(null, args);
      }
    }
  };
  return paths;
};
